# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:

  dockerhub_login:
    description: "Logs into Dockerhub"
    parameters:
      username:
        type: string
      token:
        type: string
    steps:
      - run: echo << parameters.token >> | docker login -u << parameters.username >> --password-stdin

  prepare_buildx_context:
    description: "Prepares BuildX context"
    steps:
      - run: |
          docker context create buildx-build
          docker buildx create --use buildx-build

executors:

  builder:
    docker:
      - image: kyrielight/takibi:latest # Custom image specifically for building Java projects using Bazel
    resource_class: medium
    working_directory: /tmp/athenaeum

  publisher:
    environment:
      IMAGE_NAME: athenaeum
      PLATFORMS: linux/amd64,linux/arm64
    docker:
      - image: cimg/base:stable
    resource_class: small

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:

  build_binary:
    executor: builder
    steps:
      - checkout
      - run: |
          bazel build //moe/best/athenaeum/app:usagi_deploy.jar
      - persist_to_workspace:
          root: bazel-bin
          paths:
            - moe/best/athenaeum/app/usagi_deploy.jar

  dockerhub_publish:
    executor: publisher
    steps:
      - setup_remote_docker:
          version: default
      - checkout
      - prepare_buildx_context
      - dockerhub_login:
          username: $DOCKERHUB_USERNAME
          token: $DOCKERHUB_ACCESS_TOKEN
      - attach_workspace:
          at: bazel-bin
      - run: |
          docker buildx build -t $DOCKERHUB_USERNAME/athenaeum:latest --platform $PLATFORMS -f dockerfiles/BuildX.Dockerfile --push .

  test_all:
    executor: builder
    steps:
      - checkout
      - run: |
          bazel test --test_output=summary //:all_tests

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_test:
    jobs:
      - build_binary
      - test_all
    when:
      not:
        equal: [ master,  << pipeline.git.branch >> ]

  deploy_to_docker:
    jobs:
      - build_binary
      - dockerhub_publish:
          context:
            - dockerhub
          requires:
            - build_binary
    when:
      and:
        - equal: [ master, << pipeline.git.branch >> ]

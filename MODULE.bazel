"""
Module for the Athenaeum project.
"""

# Version Constants
JUNIT5_JUPITER_VERSION = "5.8.2"
JUNIT5_PLATFORM_VERSION = "1.8.2"
KTOR_VERSION = "2.2.2"
SERIALISATION_VERSION = "1.4.1"

module(
    name = "athenaeum",
    repo_name = "moe_best_athenaeum",
    version = "0.1",
)

bazel_dep(name = "rules_java", version = "7.4.0")
bazel_dep(name = "rules_jvm_external", version = "6.0")
bazel_dep(name = "rules_kotlin", version = "1.9.0")

# Use a custom Kotlin toolchain for this module.
# This is needed since we target higher (JVM 11) than the default (JVM 1.8).
register_toolchains("//:kotlin_toolchain")

# Import Maven into this module
maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.jetbrains.kotlinx:kotlinx-serialization-core-jvm:%s" % SERIALISATION_VERSION,
        "org.junit.jupiter:junit-jupiter-api:%s" % JUNIT5_JUPITER_VERSION,
        "org.junit.jupiter:junit-jupiter-engine:%s" % JUNIT5_JUPITER_VERSION,
        "org.junit.platform:junit-platform-runner:%s" % JUNIT5_PLATFORM_VERSION,
        "org.junit.platform:junit-platform-console:%s" % JUNIT5_PLATFORM_VERSION,
        "io.ktor:ktor-http-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-client-core-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-netty-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-core-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-host-common-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-resources-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-status-pages-jvm:%s" % KTOR_VERSION,
        "io.ktor:ktor-server-test-host-jvm:%s" % KTOR_VERSION,
    ],
)
use_repo(maven, "maven")